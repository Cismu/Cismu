---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <button type="button" id="button-send-event">Event</button>
</Layout>

<script>
  import { invoke, Channel } from "@tauri-apps/api/core";
  import type { Track } from "@/types";

  type ScanEvent =
    | { event: "scanStarted"; data: null }
    | { event: "trackAdded"; data: Track }
    | { event: "trackRemoved"; data: number }
    | { event: "trackUpdated"; data: Track }
    | { event: "scanFinished"; data: null }
    | { event: "error"; data: { message: string } };

  async function runScan() {
    const onEvent = new Channel<ScanEvent>();
    const tracks = [];
    let startTime: number;

    onEvent.onmessage = ({ event, data }) => {
      switch (event) {
        case "scanStarted":
          startTime = performance.now();
          console.log("‚ñ∂ Escaneo iniciado");
          break;

        case "trackAdded":
          tracks.push(data);
          console.log("‚ûï Pista nueva:", data);
          break;

        case "trackRemoved":
          console.log("‚ûñ Pista eliminada ID:", data);
          break;

        case "trackUpdated":
          console.log("üîÑ Pista actualizada:", data);
          break;

        case "scanFinished":
          const elapsedMs = performance.now() - startTime;
          console.log(`‚úîÔ∏è Escaneo terminado en ${elapsedMs.toFixed(2)} ms, total tracks: ${tracks.length}`);
          break;

        case "error":
          console.error("‚ùå Error:", data.message);
          break;
      }
    };

    // El invoke arranca el canal, luego todo viene por onmessage
    await invoke("start_scan", { onEvent });
  }

  document
    .querySelector("#button-send-event")!
    .addEventListener("click", runScan);
</script>
